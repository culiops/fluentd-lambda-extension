# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Binary

on:
  push:
    branches:
      - 'features/**'
  tags:        
      - v1.*
      - v2.*

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.19', '1.20' ]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20
        cache: true

    - name: Display Go version
      run: go version

    - name: Build
      run: |
          CGO_ENABLED=0 GOOS=linux go build -v ./extensions -mod=readonly -o bin/fluentd-lambda-extension && \
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v ./extensions -mod=readonly -o bin/fluentd-lambda-extension-amd64 && \
          CGO_ENABLED=0 GOOS=darwin go build -v ./extensions -mod=readonly -o bin/fluentd-lambda-extension-darwin && \
          CGO_ENABLED=0 GOOS=windows go build -v ./extensions -mod=readonly -o bin/fluentd-lambda-extension-windows.exe && \
          CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 go build -v ./extensions -mod=readonly -o bin/fluentd-lambda-extension-armhf && \
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -v ./extensions -mod=readonly -o bin/fluentd-lambda-extension-arm64

    # - name: Test
    #   run: go test -v ./...
